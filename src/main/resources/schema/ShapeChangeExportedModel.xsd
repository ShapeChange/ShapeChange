<?xml version="1.0" encoding="UTF-8"?>
<schema targetNamespace="http://shapechange.net/model" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:sc="http://shapechange.net/model" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" vc:minVersion="1.1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0">
 <element name="Model" type="sc:ModelType">
  <key name="packageKey">
   <selector xpath=".//sc:Package"/>
   <field xpath="sc:id"/>
  </key>
  <key name="classKey">
   <selector xpath=".//sc:Class"/>
   <field xpath="sc:id"/>
  </key>
  <key name="propertyKey">
   <selector xpath=".//sc:Property"/>
   <field xpath="sc:id"/>
  </key>
  <key name="associationKey">
   <selector xpath="./sc:associations/sc:Association"/>
   <field xpath="sc:id"/>
  </key>
  <key name="classPropertyKey">
   <selector xpath=".//sc:Class/sc:properties/sc:Property"/>
   <field xpath="sc:id"/>
  </key>
  <key name="constraintContextModelElementKey">
   <selector xpath=".//sc:Class | .//sc:Property"/>
   <field xpath="sc:id"/>
  </key>
  <keyref name="packageSupplierKeyRef" refer="sc:packageKey">
   <selector xpath=".//sc:SupplierId"/>
   <field xpath="."/>
  </keyref>
  <keyref name="classToAssociationKeyRef" refer="sc:associationKey">
   <selector xpath=".//sc:Class"/>
   <field xpath="sc:associationId"/>
  </keyref>
  <keyref name="classBaseClassKeyRef" refer="sc:classKey">
   <selector xpath=".//sc:Class"/>
   <field xpath="sc:baseClassId"/>
  </keyref>
  <keyref name="classSupertypeKeyRef" refer="sc:classKey">
   <selector xpath=".//sc:SupertypeId"/>
   <field xpath="."/>
  </keyref>
  <keyref name="classSubtypeKeyRef" refer="sc:classKey">
   <selector xpath=".//sc:SubtypeId"/>
   <field xpath="."/>
  </keyref>
  <keyref name="constraintContextModelElementKeyRef" refer="sc:constraintContextModelElementKey">
   <selector xpath=".//sc:OclConstraint | .//sc:FolConstraint | .//sc:TextConstraint"/>
   <field xpath="sc:contextModelElementId"/>
  </keyref>
  <keyref name="propertyTypeKeyref" refer="sc:classKey">
   <selector xpath=".//sc:Property"/>
   <field xpath="sc:typeId"/>
  </keyref>
  <keyref name="propertyInClassKeyRef" refer="sc:classKey">
   <selector xpath=".//sc:Property"/>
   <field xpath="sc:inClassId"/>
  </keyref>
  <keyref name="propertyReversePropertyKeyRef" refer="sc:propertyKey">
   <selector xpath=".//sc:Property"/>
   <field xpath="sc:reversePropertyId"/>
  </keyref>
  <keyref name="propertyToAssociationKeyRef" refer="sc:associationKey">
   <selector xpath=".//sc:Property"/>
   <field xpath="sc:associationId"/>
  </keyref>
  <keyref name="associationToClassKeyRef" refer="sc:classKey">
   <selector xpath="./sc:associations/sc:Association"/>
   <field xpath="sc:assocClassId"/>
  </keyref>
  <keyref name="associationEndKeyRef" refer="sc:classPropertyKey">
   <selector xpath="./sc:associations/sc:Association/sc:end1 | ./sc:associations/sc:Association/sc:end2"/>
   <field xpath="@ref"/>
  </keyref>
 </element>
 <complexType name="ModelType">
  <all>
   <element minOccurs="0" name="globalProfileInfos">
    <complexType>
     <all>
      <element maxOccurs="unbounded" name="Profile">
       <complexType>
        <all>
         <element name="name" type="string"/>
         <element name="description" type="string"/>
        </all>
       </complexType>
      </element>
     </all>
    </complexType>
   </element>
   <element name="packages">
    <complexType>
     <all>
      <element maxOccurs="unbounded" ref="sc:Package"/>
     </all>
    </complexType>
   </element>
   <element minOccurs="0" name="associations">
    <complexType>
     <all>
      <element maxOccurs="unbounded" name="Association" type="sc:AssociationType"/>
     </all>
    </complexType>
   </element>
  </all>
  <attribute name="encoding" type="string" use="required"/>
 </complexType>
 <!-- <complexType name="InfoType">
  <all>
   <element minOccurs="0" name="name" type="string"/>
   <element name="id" type="string"/>
   <element minOccurs="0" ref="sc:stereotypes"/>
   <element ref="sc:descriptors"/>
   <element minOccurs="0" ref="sc:taggedValues"/>
  </all>
 </complexType>-->
 <complexType name="DescriptorType">
  <all>
   <element minOccurs="1" name="descriptorValues">
    <complexType>
     <all>
      <element maxOccurs="unbounded" name="DescriptorValue">
       <complexType>
        <simpleContent>
         <extension base="string">
          <attribute name="lang" type="string"/>
         </extension>
        </simpleContent>
       </complexType>
      </element>
     </all>
    </complexType>
   </element>
  </all>
 </complexType>
 <element name="Profile" type="sc:ProfileType"/>
 <complexType name="ProfileType">
  <all>
   <element minOccurs="0" name="versionIdentifier">
    <complexType>
     <all>
      <element maxOccurs="unbounded" name="VersionRange">
       <complexType>
        <attribute name="begin" type="string" use="required"/>
        <attribute name="end" type="string" use="required"/>
       </complexType>
      </element>
     </all>
    </complexType>
   </element>
   <element minOccurs="0" name="parameter">
    <complexType>
     <all>
      <element maxOccurs="unbounded" minOccurs="1" name="ProfileParameter">
       <complexType>
        <attribute name="name" type="string" use="required"/>
        <attribute name="value" type="string"/>
       </complexType>
      </element>
     </all>
    </complexType>
   </element>
  </all>
  <attribute name="name" type="string" use="required"/>
 </complexType>
 <element name="Package">
  <complexType>
   <complexContent>
    <extension base="sc:PackageType">
     <attribute default="true" name="editable" type="boolean"/>
    </extension>
   </complexContent>
  </complexType>
 </element>
 <complexType name="PackageType">
  <all>
   <element minOccurs="1" name="name" type="string"/>
   <element name="id" type="string" nillable="false"/>
   <element minOccurs="0" ref="sc:stereotypes"/>
   <element ref="sc:descriptors" minOccurs="0"/>
   <element minOccurs="0" ref="sc:taggedValues"/>
   <element minOccurs="0" name="supplierIds">
    <complexType>
     <all>
      <element maxOccurs="unbounded" name="SupplierId" type="string"/>
     </all>
    </complexType>
   </element>
   <element minOccurs="0" name="diagrams">
    <complexType>
     <all>
      <element maxOccurs="unbounded" ref="sc:ImageMetadata"/>
     </all>
    </complexType>
   </element>
   <element maxOccurs="1" minOccurs="0" name="classes">
    <complexType>
     <all>
      <element maxOccurs="unbounded" ref="sc:Class"/>
     </all>
    </complexType>
   </element>
   <element minOccurs="0" name="packages">
    <complexType>
     <all>
      <element maxOccurs="unbounded" ref="sc:Package"/>
     </all>
    </complexType>
   </element>
  </all>
 </complexType>
 <element name="Class" type="sc:ClassType"/>
 <complexType name="ClassType">
  <all>
   <element minOccurs="1" name="name" type="string"/>
   <element name="id" type="string"/>
   <element minOccurs="0" ref="sc:stereotypes"/>
   <element ref="sc:descriptors" minOccurs="0"/>
   <element minOccurs="0" ref="sc:taggedValues"/>
   <element minOccurs="0" name="profiles">
    <complexType>
     <all>
      <element maxOccurs="unbounded" ref="sc:Profile" minOccurs="0"/>
     </all>
    </complexType>
   </element>
   <element default="false" minOccurs="0" name="isAbstract" type="boolean"/>
   <element default="false" minOccurs="0" name="isLeaf" type="boolean"/>
   <element minOccurs="0" name="associationId" type="string"/>
   <element minOccurs="0" name="baseClassId" type="string"/>
   <element minOccurs="0" name="linkedDocument" type="string"/>
   <element minOccurs="0" name="supertypes">
    <complexType>
     <all>
      <element maxOccurs="unbounded" name="SupertypeId" type="string"/>
     </all>
    </complexType>
   </element>
   <element minOccurs="0" name="subtypes">
    <complexType>
     <all>
      <element maxOccurs="unbounded" name="SubtypeId" type="string"/>
     </all>
    </complexType>
   </element>
   <element minOccurs="0" name="constraints">
    <complexType>
     <all>
      <element maxOccurs="unbounded" ref="sc:Constraint"/>
     </all>
    </complexType>
   </element>
   <element minOccurs="0" name="diagrams">
    <complexType>
     <all>
      <element maxOccurs="unbounded" ref="sc:ImageMetadata"/>
     </all>
    </complexType>
   </element>
   <element minOccurs="0" name="properties">
    <complexType>
     <all>
      <element maxOccurs="unbounded" ref="sc:Property"/>
     </all>
    </complexType>
   </element>
  </all>
 </complexType>
 <element name="Property" type="sc:PropertyType"/>
 <complexType name="PropertyType">
  <all>
   <element minOccurs="0" name="name" type="string"/>
   <element name="id" type="string"/>
   <element minOccurs="0" ref="sc:stereotypes"/>
   <element ref="sc:descriptors" minOccurs="0"/>
   <element minOccurs="0" ref="sc:taggedValues"/>
   <element minOccurs="0" name="profiles">
    <complexType>
     <all>
      <element maxOccurs="unbounded" ref="sc:Profile" minOccurs="0"/>
     </all>
    </complexType>
   </element>
   <element name="cardinality" type="string" default="1" minOccurs="0"/>
   <element default="true" minOccurs="0" name="isNavigable" type="boolean"/>
   <element name="sequenceNumber">
    <simpleType>
     <restriction base="string">
      <pattern value="(-)?\d+(\.(-)?\d+)*"/>
     </restriction>
    </simpleType>
   </element>
   <element minOccurs="0" name="typeId" type="string"/>
   <element minOccurs="0" name="typeName" type="string"/>
   <element default="false" minOccurs="0" name="isDerived" type="boolean"/>
   <element default="false" minOccurs="0" name="isReadOnly" type="boolean"/>
   <element default="true" minOccurs="0" name="isAttribute" type="boolean"/>
   <element default="false" minOccurs="0" name="isOrdered" type="boolean">
    <annotation>
     <documentation>Defines if the property represents an ordered collection. Default is false (as specified in UML 2.4.1). NOTE: Has no semantic meaning if the property represents a code/enum.</documentation>
    </annotation>
   </element>
   <element default="true" minOccurs="0" name="isUnique" type="boolean">
    <annotation>
     <documentation>Defines if the property allows duplicates in the values (false) or if only unique values are allowed (true). Default is true (as specified in UML 2.4.1). NOTE: Has no semantic meaning if the property represents a code/enum.</documentation>
    </annotation>
   </element>
   <element default="false" minOccurs="0" name="isComposition" type="boolean">
    <annotation>
     <documentation>Defines if the property is a composition. Default is false. NOTE: Has no semantic meaning if the property represents a code/enum.</documentation>
    </annotation>
   </element>
   <element default="false" minOccurs="0" name="isAggregation" type="boolean">
    <annotation>
     <documentation>Defines if the property is an aggregation. Default is false. NOTE: Has no semantic meaning if the property represents a code/enum.</documentation>
    </annotation>
   </element>
   <element default="false" minOccurs="0" name="isOwned" type="boolean"/>
   <element minOccurs="0" name="initialValue" type="string"/>
   <element default="inlineOrByReference" minOccurs="0" name="inlineOrByReference" type="string"/>
   <element minOccurs="0" name="qualifiers">
    <complexType>
     <all>
      <element maxOccurs="unbounded" name="Qualifier">
       <complexType>
        <all>
         <element name="name" type="string"/>
         <element name="type" type="string"/>
        </all>
       </complexType>
      </element>
     </all>
    </complexType>
   </element>
   <element minOccurs="0" name="inClassId" type="string"/>
   <element minOccurs="0" name="reversePropertyId" type="string"/>
   <element minOccurs="0" name="associationId" type="string"/>
   <element minOccurs="0" name="constraints">
    <complexType>
     <all>
      <element maxOccurs="unbounded" ref="sc:Constraint"/>
     </all>
    </complexType>
   </element>
  </all>
 </complexType>
 <element name="Association" type="sc:AssociationType"/>
 <complexType name="AssociationType">
  <all>
   <element minOccurs="0" name="name" type="string"/>
   <element name="id" type="string"/>
   <element minOccurs="0" ref="sc:stereotypes"/>
   <element ref="sc:descriptors" minOccurs="0"/>
   <element minOccurs="0" ref="sc:taggedValues"/>
   <element minOccurs="0" name="assocClassId" type="string"/>
   <element name="end1" type="sc:AssociationRoleType"/>
   <element name="end2" type="sc:AssociationRoleType"/>
  </all>
 </complexType>
 <complexType name="AssociationRoleType">
  <all>
   <element minOccurs="0" ref="sc:Property"/>
  </all>
  <attribute name="ref" type="string"/>
 </complexType>
 <element name="ImageMetadata" type="sc:ImageMetadataType"/>
 <complexType name="ImageMetadataType">
  <all>
   <element name="id" type="ID"/>
   <element name="name" type="string"/>
   <element name="file" type="string"/>
   <element name="relPathToFile" type="string"/>
   <element name="width" type="positiveInteger"/>
   <element name="height" type="positiveInteger"/>
  </all>
 </complexType>

 <!-- XSD 1.1 constraint modeling -->
 <element abstract="true" name="Constraint" type="sc:ConstraintType"/>
 <simpleType name="ConstraintContextModelElementType">
  <annotation>
   <documentation>Define the type of the model element that provides the context for the constraint. That typically is a class. ShapeChange also supports constraints defined on attributes.</documentation>
  </annotation>
  <restriction base="string">
   <enumeration value="CLASS"/>
   <enumeration value="ATTRIBUTE"/>
   <enumeration value="ROLE"/>
  </restriction>
 </simpleType>
 <complexType name="ConstraintType">
  <all>
   <element name="name" type="string"/>
   <element minOccurs="0" name="status" type="string"/>
   <element name="text" type="string" minOccurs="0"/>
   <element name="contextModelElementId" type="string"/>
   <element default="CLASS" minOccurs="0" name="contextModelElementType" type="sc:ConstraintContextModelElementType"/>
  </all>
 </complexType>
 <element name="OclConstraint" substitutionGroup="sc:Constraint" type="sc:OclConstraintType"/>
 <complexType name="OclConstraintType">
  <complexContent>
   <extension base="sc:ConstraintType"/>
  </complexContent>
 </complexType>
 <element name="FolConstraint" substitutionGroup="sc:Constraint" type="sc:FolConstraintType"/>
 <complexType name="FolConstraintType">
  <complexContent>
   <extension base="sc:ConstraintType">
    <all>
     <element minOccurs="0" name="sourceType" type="string"/>
    </all>
   </extension>
  </complexContent>
 </complexType>
 <element name="TextConstraint" substitutionGroup="sc:Constraint" type="sc:TextConstraintType"/>
 <complexType name="TextConstraintType">
  <complexContent>
   <extension base="sc:ConstraintType">
    <all>
     <element minOccurs="0" name="type" type="string"/>
    </all>
   </extension>
  </complexContent>
 </complexType>

 <!-- XSD 1.0 constraint modeling -->
 <!--<element abstract="true" name="Constraint" type="sc:ConstraintType"/>
 <complexType name="ConstraintType"/>
  <element name="OclConstraint" substitutionGroup="sc:Constraint" type="sc:OclConstraintType"/>
 <complexType name="OclConstraintType">
  <complexContent>
   <extension base="sc:ConstraintType">
    <all>
     <element name="name" type="string"/>
     <element minOccurs="0" name="status" type="string"/>
     <element name="text" type="string" minOccurs="0"/>
     <element name="contextModelElementId" type="string"/>
     <element default="CLASS" minOccurs="0" name="contextModelElementType" type="sc:ConstraintContextModelElementType"/>
    </all>
   </extension>
  </complexContent>
 </complexType>
 <element name="FolConstraint" substitutionGroup="sc:Constraint" type="sc:FolConstraintType"/>
 <complexType name="FolConstraintType">
  <complexContent>
   <extension base="sc:ConstraintType">
    <all>
     <element name="name" type="string"/>
     <element minOccurs="0" name="status" type="string"/>
     <element name="text" type="string" minOccurs="0"/>
     <element name="contextModelElementId" type="string"/>
     <element default="CLASS" minOccurs="0" name="contextModelElementType" type="sc:ConstraintContextModelElementType"/>
     <element minOccurs="0" name="sourceType" type="string"/>
    </all>
   </extension>
  </complexContent>
 </complexType>
 <element name="TextConstraint" substitutionGroup="sc:Constraint" type="sc:TextConstraintType"/>
 <complexType name="TextConstraintType">
  <complexContent>
   <extension base="sc:ConstraintType">
    <all>
     <element name="name" type="string"/>
     <element minOccurs="0" name="status" type="string"/>
     <element name="text" type="string" minOccurs="0"/>
     <element name="contextModelElementId" type="string"/>
     <element default="CLASS" minOccurs="0" name="contextModelElementType" type="sc:ConstraintContextModelElementType"/>
     <element minOccurs="0" name="type" type="string"/>
    </all>
   </extension>
  </complexContent>
 </complexType>-->

 <element name="descriptors">
  <complexType>
   <all>
    <element minOccurs="0" name="alias" type="sc:DescriptorType"/>
    <element minOccurs="0" name="primaryCode" type="sc:DescriptorType"/>
    <element minOccurs="0" name="globalIdentifier" type="sc:DescriptorType"/>
    <element minOccurs="0" name="documentation" type="sc:DescriptorType"/>
    <element minOccurs="0" name="definition" type="sc:DescriptorType"/>
    <element minOccurs="0" name="description" type="sc:DescriptorType"/>
    <element minOccurs="0" name="legalBasis" type="sc:DescriptorType"/>
    <element minOccurs="0" name="language" type="sc:DescriptorType"/>
    <element minOccurs="0" name="example" type="sc:DescriptorType"/>
    <element minOccurs="0" name="dataCaptureStatement" type="sc:DescriptorType"/>
   </all>
  </complexType>
 </element>
 <element name="stereotypes">
  <complexType>
   <all>
    <element maxOccurs="unbounded" name="Stereotype" type="string"/>
   </all>
  </complexType>
 </element>
 <element name="taggedValues">
  <complexType>
   <all>
    <element maxOccurs="unbounded" name="TaggedValue">
     <complexType>
      <all>
       <element name="name" type="string"/>
       <element minOccurs="0" name="values">
        <complexType>
         <all>
          <element maxOccurs="unbounded" name="Value" type="string"/>
         </all>
        </complexType>
       </element>
      </all>
     </complexType>
    </element>
   </all>
  </complexType>
 </element>
</schema>
