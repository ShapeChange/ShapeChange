{
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Capabilities"
        ],
        "summary": "landing page",
        "description": "The landing page provides links to the API definition, the conformance declaration and to the feature collections of this dataset.",
        "operationId": "getLandingPage",
        "responses": {
          "200": {
            "$ref": "#/components/responses/LandingPage"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/conformance": {
      "get": {
        "tags": [
          "Capabilities"
        ],
        "summary": "information about specifications that this API conforms to",
        "description": "A list of all conformance classes specified in a standard that the API conforms to.",
        "operationId": "getConformanceDeclaration",
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConformanceDeclaration"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/collections": {
      "get": {
        "tags": [
          "Capabilities"
        ],
        "summary": "the feature collections",
        "description": "Fetch the feature collections in the dataset.",
        "operationId": "getCollections",
        "responses": {
          "200": {
            "$ref": "#/components/responses/Collections"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/collections/{collectionId}": {
      "get": {
        "tags": [
          "Capabilities"
        ],
        "summary": "the feature collection '{collectionId}'",
        "description": "Fetch the feature collection '{collectionId}'.",
        "operationId": "getCollection_{collectionId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/collectionId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Collection"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/collections/{collectionId}/items": {
      "get": {
        "tags": [
          "Data"
        ],
        "summary": "fetch features in the feature collection '{collectionId}'",
        "description": "Fetch features in the feature collection '{collectionId}'. The features included in the response are determined by the server based on the query parameters of the request. To support access to larger collections without overloading the client, the API supports paged access with links to the next page, if more features are selected that the page size. The `bbox` and `datetime` parameter can be used to select only a subset of the features in the collection (the features that are in the bounding box or date-time interval). The `bbox` parameter matches all features in the collection that are not associated with a location, too. The `datetime` parameter matches all features in the collection that are not associated with a time stamp or interval, too. The `limit` parameter may be used to control the maximum number of the selected features that should be returned in the response, the page size. Each page may include information about the number of selected and returned features (`numberMatched` and `numberReturned`) as well as a link to support paging (link relation type `next`).",
        "operationId": "getFeatures_{collectionId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/collectionId"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/bbox"
          },
          {
            "$ref": "#/components/parameters/datetime"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Features"
          },
          "400": {
            "$ref": "#/components/responses/InvalidParameter"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/collections/{collectionId}/items/{featureId}": {
      "get": {
        "tags": [
          "Data"
        ],
        "summary": "fetch a single feature in the feature collection '{collectionId}'",
        "description": "Fetch the feature with id `featureId`.",
        "operationId": "getFeature_{collectionId}",
        "parameters": [
          {
            "$ref": "#/components/parameters/collectionId"
          },
          {
            "$ref": "#/components/parameters/featureId"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/Feature"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "collectionId": {
        "name": "collectionId",
        "in": "path",
        "description": "local identifier of a collection",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "featureId": {
        "name": "featureId",
        "in": "path",
        "description": "local identifier of a feature",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "bbox": {
        "name": "bbox",
        "in": "query",
        "description": "Only features that have a geometry that intersects the bounding box are selected.\nThe bounding box is provided as four or six numbers, depending on whether the coordinate reference system includes a vertical axis (height or depth):\n\n* Lower left corner, coordinate axis 1\n* Lower left corner, coordinate axis 2\n* Minimum value, coordinate axis 3 (optional)\n* Upper right corner, coordinate axis 1\n* Upper right corner, coordinate axis 2\n* Maximum value, coordinate axis 3 (optional)\n\nThe coordinate reference system of the values is WGS 84 longitude/latitude\n(http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate reference system is specified in the parameter `bbox-crs`.\n\nFor WGS 84 longitude/latitude the values are in most cases the sequence of\nminimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge).\n\nIf the vertical axis is included, the third and the sixth number are the bottom and the top of the 3-dimensional bounding box.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "minItems": 4,
          "maxItems": 6,
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      },
      "datetime": {
        "name": "datetime",
        "in": "query",
        "description": "Either a date-time or an interval, open or closed. Date and time expressions adhere to RFC 3339. Open intervals are expressed using double-dots. Examples:\n\n* A date-time: \"2018-02-12T23:20:50Z\"\n* A closed interval: \"2018-02-12T00:00:00Z/2018-03-18T12:31:12Z\"\n* Open intervals: \"2018-02-12T00:00:00Z/..\" or \"../2018-03-18T12:31:12Z\"\n\nOnly features that have a temporal property that intersects the value of `datetime` are selected.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "The optional limit parameter limits the number of items that are presented in the response document. Only items are counted that are on the first level of the collection in the response document. Nested objects contained within the explicitly requested items are not be counted.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "minimum": 1,
          "maximum": 10000,
          "type": "integer",
          "default": 10
        }
      }
    },
    "responses": {
      "LandingPage": {
        "description": "The landing page provides links to the API definition (link relation types `service-desc` and `service-doc`), the Conformance declaration (path `/conformance`, link relation type `conformance`), and to other resources."
      },
      "ConformanceDeclaration": {
        "description": "The URIs of all conformance classes supported by the API."
      },
      "Collections": {
        "description": "The feature collections shared by this API."
      },
      "Collection": {
        "description": "A feature collection."
      },
      "Features": {
        "description": "The response is a document consisting of features in the collection. The features included in the response are determined by the server based on the query parameters of the request."
      },
      "Feature": {
        "description": "The feature with id `{featureId}` in the feature collection with id `{collectionId}`"
      },
      "InvalidParameter": {
        "description": "A query parameter has an invalid value."
      },
      "NotFound": {
        "description": "The requested URI was not found."
      },
      "ServerError": {
        "description": "A server error occurred."
      }
    }
  }
}
