<?xml version="1.0" encoding="UTF-8"?><schema xmlns="http://purl.oclc.org/dsdl/schematron" xmlns:sch="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2">
  <title>Schematron constraints for schema 'Test Schema'</title>
  <ns prefix="sch" uri="http://purl.oclc.org/dsdl/schematron"/>
  <ns prefix="ex" uri="http://example.org/shapechange/sch/codelist2"/>
  <ns prefix="gml" uri="http://www.opengis.net/gml/3.2"/>
  <ns prefix="gmx" uri="http://www.isotc211.org/2005/gmx"/>
  <ns prefix="xlink" uri="http://www.w3.org/1999/xlink"/>
  <pattern>
    <rule context="ex:FeatureType">
      <assert test="ex:attribute1iso/*/@codeList='file:/C:/TMP/CodeListIso19139.xml'">Code list is 'file:/C:/TMP/CodeListIso19139.xml'</assert>
      <assert test="every $codelistUrl in ex:attribute1iso/*/@codeList satisfies (not(contains($codelistUrl, '#')) and doc-available($codelistUrl)) or (contains($codelistUrl, '#') and boolean(for $codelistDoc in doc(substring-before($codelistUrl,'#')) return exists($codelistDoc//*[@gml:id = substring-after($codelistUrl,'#')])))">Code list used by ex:attribute1iso exists</assert>
      <assert test="every $codelistUrl in ex:attribute1iso/*/@codeList satisfies (not(contains($codelistUrl, '#')) and doc($codelistUrl)/gmx:CodeListDictionary) or (contains($codelistUrl, '#') and boolean(for $codelistDoc in doc(substring-before($codelistUrl,'#')) return exists($codelistDoc//gmx:CodeListDictionary[@gml:id = substring-after($codelistUrl,'#')])))">Code list dictionary used by ex:attribute1iso is represented using an ISO 19139 CodeListDictionary</assert>
      <assert test="every $propertyElement in ex:attribute1iso satisfies boolean(for $codeListUrl in $propertyElement/*/@codeList, $codeListValue in $propertyElement/*/@codeListValue return (not(contains($codeListUrl, '#')) and doc($codeListUrl)/*/gmx:codeEntry/gmx:CodeDefinition[gml:identifier = $codeListValue]) or (contains($codeListUrl, '#') and doc(substring-before($codeListUrl,'#'))//*[@gml:id = substring-after($codeListUrl,'#')]/gmx:codeEntry/gmx:CodeDefinition[gml:identifier = $codeListValue]))">Code list value used by ex:attribute1iso exists</assert>
      <assert test="ex:attribute2iso/*/@codeList='file:/C:/TMP/CodeListIso19139.xml'">Code list is 'file:/C:/TMP/CodeListIso19139.xml'</assert>
      <assert test="every $codelistUrl in ex:attribute2iso/*/@codeList satisfies (not(contains($codelistUrl, '#')) and doc-available($codelistUrl)) or (contains($codelistUrl, '#') and boolean(for $codelistDoc in doc(substring-before($codelistUrl,'#')) return exists($codelistDoc//*[@gml:id = substring-after($codelistUrl,'#')])))">Code list used by ex:attribute2iso exists</assert>
      <assert test="every $codelistUrl in ex:attribute2iso/*/@codeList satisfies (not(contains($codelistUrl, '#')) and doc($codelistUrl)/gmx:CodeListDictionary) or (contains($codelistUrl, '#') and boolean(for $codelistDoc in doc(substring-before($codelistUrl,'#')) return exists($codelistDoc//gmx:CodeListDictionary[@gml:id = substring-after($codelistUrl,'#')])))">Code list dictionary used by ex:attribute2iso is represented using an ISO 19139 CodeListDictionary</assert>
      <assert test="every $propertyElement in ex:attribute2iso satisfies boolean(for $codeListUrl in $propertyElement/*/@codeList, $codeListValue in $propertyElement/*/@codeListValue return (not(contains($codeListUrl, '#')) and doc($codeListUrl)/*/gmx:codeEntry/gmx:CodeDefinition[gml:identifier = $codeListValue]) or (contains($codeListUrl, '#') and doc(substring-before($codeListUrl,'#'))//*[@gml:id = substring-after($codeListUrl,'#')]/gmx:codeEntry/gmx:CodeDefinition[gml:identifier = $codeListValue]))">Code list value used by ex:attribute2iso exists</assert>
      <assert test="if (not(ex:attribute3Gml32/@codeSpace)) then true() else ex:attribute3Gml32/@codeSpace='file:/C:/TMP/CodeListGml32.xml'">Code space, if set, is 'file:/C:/TMP/CodeListGml32.xml'</assert>
      <assert test="every $codelistUrl in 'file:/C:/TMP/CodeListGml32.xml' satisfies (not(contains($codelistUrl, '#')) and doc-available($codelistUrl)) or (contains($codelistUrl, '#') and boolean(for $codelistDoc in doc(substring-before($codelistUrl,'#')) return exists($codelistDoc//*[@gml:id = substring-after($codelistUrl,'#')])))">Code list used by ex:attribute3Gml32 exists</assert>
      <assert test="every $codelistUrl in 'file:/C:/TMP/CodeListGml32.xml' satisfies (not(contains($codelistUrl, '#')) and doc($codelistUrl)/gml:Dictionary) or (contains($codelistUrl, '#') and boolean(for $codelistDoc in doc(substring-before($codelistUrl,'#')) return exists($codelistDoc//gml:Dictionary[@gml:id = substring-after($codelistUrl,'#')])))">Code list dictionary used by ex:attribute3Gml32 is represented using a GML 3.2 Dictionary</assert>
      <assert test="every $propertyElement in ex:attribute3Gml32 satisfies boolean(for $codeListUrl in 'file:/C:/TMP/CodeListGml32.xml', $codeListValue in $propertyElement/text() return(not(contains($codeListUrl, '#')) and doc($codeListUrl)/*/gml:dictionaryEntry/gml:Definition[gml:identifier = $codeListValue]) or (contains($codeListUrl, '#') and doc(substring-before($codeListUrl,'#'))//*[@gml:id = substring-after($codeListUrl,'#')]/gml:dictionaryEntry/gml:Definition[gml:identifier = $codeListValue]))">Code list value used by ex:attribute3Gml32 exists</assert>
      <assert test="if (not(ex:attribute4Gml32/@codeSpace)) then true() else ex:attribute4Gml32/@codeSpace='file:/C:/TMP/CodeListGml32.xml'">Code space, if set, is 'file:/C:/TMP/CodeListGml32.xml'</assert>
      <assert test="every $codelistUrl in 'file:/C:/TMP/CodeListGml32.xml' satisfies (not(contains($codelistUrl, '#')) and doc-available($codelistUrl)) or (contains($codelistUrl, '#') and boolean(for $codelistDoc in doc(substring-before($codelistUrl,'#')) return exists($codelistDoc//*[@gml:id = substring-after($codelistUrl,'#')])))">Code list used by ex:attribute4Gml32 exists</assert>
      <assert test="every $codelistUrl in 'file:/C:/TMP/CodeListGml32.xml' satisfies (not(contains($codelistUrl, '#')) and doc($codelistUrl)/gml:Dictionary) or (contains($codelistUrl, '#') and boolean(for $codelistDoc in doc(substring-before($codelistUrl,'#')) return exists($codelistDoc//gml:Dictionary[@gml:id = substring-after($codelistUrl,'#')])))">Code list dictionary used by ex:attribute4Gml32 is represented using a GML 3.2 Dictionary</assert>
      <assert test="every $propertyElement in ex:attribute4Gml32 satisfies boolean(for $codeListUrl in 'file:/C:/TMP/CodeListGml32.xml', $codeListValue in $propertyElement/text() return(not(contains($codeListUrl, '#')) and doc($codeListUrl)/*/gml:dictionaryEntry/gml:Definition[gml:identifier = $codeListValue]) or (contains($codeListUrl, '#') and doc(substring-before($codeListUrl,'#'))//*[@gml:id = substring-after($codeListUrl,'#')]/gml:dictionaryEntry/gml:Definition[gml:identifier = $codeListValue]))">Code list value used by ex:attribute4Gml32 exists</assert>
      <assert test="every $propertyElement in ex:attribute5Gml33/@xlink:href satisfies starts-with($propertyElement,'file:/C:/TMP/CodeListGml33.xml')">Code list value URI starts with 'file:/C:/TMP/CodeListGml33.xml'</assert>
      <assert test="every $clValueUri in ex:attribute5Gml33/@xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value used by ex:attribute5Gml33 exists</assert>
      <assert test="every $clValueUri in ex:attribute5Gml33/@xlink:href satisfies (not(contains($clValueUri, '#')) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value used by ex:attribute5Gml33 is represented using GML 3.2 (gml:Definition)</assert>
      <assert test="every $propertyElement in ex:attribute6Gml33/@xlink:href satisfies starts-with($propertyElement,'file:/C:/TMP/CodeListGml33.xml')">Code list value URI starts with 'file:/C:/TMP/CodeListGml33.xml'</assert>
      <assert test="every $clValueUri in ex:attribute6Gml33/@xlink:href satisfies (not(contains($clValueUri, '#')) and doc-available($clValueUri)) or (contains($clValueUri, '#') and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//*[@gml:id = substring-after($clValueUri,'#')])))">Code list value used by ex:attribute6Gml33 exists</assert>
      <assert test="every $clValueUri in ex:attribute6Gml33/@xlink:href satisfies (not(contains($clValueUri, '#')) and doc($clValueUri)/gml:Definition) or (contains($clValueUri, '#') and boolean(for $codelistDoc in doc(substring-before($clValueUri,'#')) return exists($codelistDoc//gml:Definition[@gml:id = substring-after($clValueUri,'#')])))">Code list value used by ex:attribute6Gml33 is represented using GML 3.2 (gml:Definition)</assert>
    </rule>
  </pattern>
</schema>
