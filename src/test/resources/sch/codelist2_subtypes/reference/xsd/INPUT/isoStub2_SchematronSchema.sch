<?xml version="1.0" encoding="UTF-8"?><schema xmlns="http://purl.oclc.org/dsdl/schematron" xmlns:sch="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2">
  <title>Schematron constraints for schema 'ISO Stub2' and dependent schema(s)</title>
  <ns prefix="sch" uri="http://purl.oclc.org/dsdl/schematron"/>
  <ns prefix="iso2" uri="http://example.org/shapechange/sch/codelist2/isoStub2"/>
  <ns prefix="gml" uri="http://www.opengis.net/gml/3.2"/>
  <ns prefix="ex1" uri="http://example.org/shapechange/sch/codelist2/subtypes/1"/>
  <ns prefix="gmx" uri="http://www.isotc211.org/2005/gmx"/>
  <pattern>
    <rule context="iso2:FeatureTypeIso2/iso2:att1">
      <assert test="every $codeListUrl in */@codeList satisfies (not(contains($codeListUrl, '#')) and doc-available($codeListUrl)) or (contains($codeListUrl, '#') and doc-available(substring-before($codeListUrl,'#')) and boolean(for $codelistDoc in doc(substring-before($codeListUrl,'#')) return exists($codelistDoc//*[@gml:id = substring-after($codeListUrl,'#')])))">Code list shall exist</assert>
      <assert test="every $codeListUrl in */@codeList satisfies (not(contains($codeListUrl, '#')) and doc-available($codeListUrl) and doc($codeListUrl)/*[namespace-uri() = 'http://www.isotc211.org/2005/gmx' and (local-name() = 'ML_CodeListDictionary' or local-name() = 'CodeListDictionary')]) or (contains($codeListUrl, '#') and doc-available(substring-before($codeListUrl,'#')) and boolean(for $codelistDoc in doc(substring-before($codeListUrl,'#')) return exists($codelistDoc//*[namespace-uri() = 'http://www.isotc211.org/2005/gmx' and (local-name() = 'ML_CodeListDictionary' or local-name() = 'CodeListDictionary') and @gml:id = substring-after($codeListUrl,'#')])))">Code list dictionary shall be represented using an ISO 19139 CodeListDictionary</assert>
      <assert test="every $codeListUrl in */@codeList, $codeListValue in */@codeListValue satisfies (not(contains($codeListUrl, '#')) and doc-available($codeListUrl) and doc($codeListUrl)/*/gmx:codeEntry/*[namespace-uri() = 'http://www.isotc211.org/2005/gmx' and (local-name() = 'ML_CodeDefinition' or local-name() = 'CodeDefinition') and gml:identifier = $codeListValue]) or (contains($codeListUrl, '#') and doc-available(substring-before($codeListUrl,'#')) and doc(substring-before($codeListUrl,'#'))//*[@gml:id = substring-after($codeListUrl,'#')]/gmx:codeEntry/*[namespace-uri() = 'http://www.isotc211.org/2005/gmx' and (local-name() = 'ML_CodeDefinition' or local-name() = 'CodeDefinition') and gml:identifier = $codeListValue])">Code list value shall exist</assert>
    </rule>
    <rule context="ex1:FeatureTypeS1_4/iso2:att1">
      <assert test="every $codeListUrl in */@codeList satisfies (not(contains($codeListUrl, '#')) and doc-available($codeListUrl)) or (contains($codeListUrl, '#') and doc-available(substring-before($codeListUrl,'#')) and boolean(for $codelistDoc in doc(substring-before($codeListUrl,'#')) return exists($codelistDoc//*[@gml:id = substring-after($codeListUrl,'#')])))">Code list shall exist</assert>
      <assert test="every $codeListUrl in */@codeList satisfies (not(contains($codeListUrl, '#')) and doc-available($codeListUrl) and doc($codeListUrl)/*[namespace-uri() = 'http://www.isotc211.org/2005/gmx' and (local-name() = 'ML_CodeListDictionary' or local-name() = 'CodeListDictionary')]) or (contains($codeListUrl, '#') and doc-available(substring-before($codeListUrl,'#')) and boolean(for $codelistDoc in doc(substring-before($codeListUrl,'#')) return exists($codelistDoc//*[namespace-uri() = 'http://www.isotc211.org/2005/gmx' and (local-name() = 'ML_CodeListDictionary' or local-name() = 'CodeListDictionary') and @gml:id = substring-after($codeListUrl,'#')])))">Code list dictionary shall be represented using an ISO 19139 CodeListDictionary</assert>
      <assert test="every $codeListUrl in */@codeList, $codeListValue in */@codeListValue satisfies (not(contains($codeListUrl, '#')) and doc-available($codeListUrl) and doc($codeListUrl)/*/gmx:codeEntry/*[namespace-uri() = 'http://www.isotc211.org/2005/gmx' and (local-name() = 'ML_CodeDefinition' or local-name() = 'CodeDefinition') and gml:identifier = $codeListValue]) or (contains($codeListUrl, '#') and doc-available(substring-before($codeListUrl,'#')) and doc(substring-before($codeListUrl,'#'))//*[@gml:id = substring-after($codeListUrl,'#')]/gmx:codeEntry/*[namespace-uri() = 'http://www.isotc211.org/2005/gmx' and (local-name() = 'ML_CodeDefinition' or local-name() = 'CodeDefinition') and gml:identifier = $codeListValue])">Code list value shall exist</assert>
    </rule>
  </pattern>
</schema>
