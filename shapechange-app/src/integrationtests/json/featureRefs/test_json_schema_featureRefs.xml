<?xml version="1.0" encoding="UTF-8"?>
<ShapeChangeConfiguration xmlns:xi="http://www.w3.org/2001/XInclude" xmlns="http://www.interactive-instruments.de/ShapeChange/Configuration/1.1" xmlns:sc="http://www.interactive-instruments.de/ShapeChange/Configuration/1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.interactive-instruments.de/ShapeChange/Configuration/1.1 ../../../../sc-resources/schema/ShapeChangeConfiguration.xsd">
 <input id="input">
  <parameter name="inputModelType" value="EA7"/>
  <parameter name="repositoryFileNameOrConnectionString" value="src/integrationtests/json/featureRefs/test_json_schema_featureRefs.qea"/>
  <parameter name="appSchemaNameRegex" value="Test Schema.*"/>
  <parameter name="publicOnly" value="true"/>
  <parameter name="checkingConstraints" value="enabled"/>
  <parameter name="dontConstructAssociationNames" value="true"/>
  <xi:include href="sc-resources/config/StandardAliases.xml"/>
 </input>
 <log>
  <parameter name="reportLevel" value="INFO"/>
  <parameter name="logFile" value="testResults/json/featureRefs/log.xml"/>
 </log>
 <transformers>
  <Transformer class="de.interactive_instruments.shapechange.core.transformation.identity.IdentityTransform" id="IDENTITY" input="input" mode="enabled"/>
 </transformers>
 <targets>
  
  <!-- ========== -->
  <!-- Plain JSON 1 -->
  <!-- ========== -->
  <Target class="de.interactive_instruments.shapechange.core.target.json.JsonSchemaTarget" mode="enabled" inputs="IDENTITY">   
   <targetParameter name="outputDirectory" value="testResults/json/featureRefs/json_schemas/schema1"/>
   <targetParameter name="sortedOutput" value="true"/>
   <targetParameter name="inlineOrByReferenceDefault" value="byReference"/>
   <!-- Default value: <targetParameter name="featureRefProfiles" value="rel-as-link"/> -->
   <targetParameter name="defaultEncodingRule" value="myPlainJson1"/>
   <rules>
    <EncodingRule name="myPlainJson1" extends="defaultPlainJson">
     <rule name="rule-json-all-featureRefs"/>
    </EncodingRule>
   </rules>
   <xi:include href="sc-resources/config/StandardMapEntries_JSON.xml"/>
    <mapEntries>
	  <MapEntry type="ExtFT1" rule="*" targetType="https://example.org/extschema/schema.json#/$defs/ExtFT1" param="collectionInfos{uriTemplate=https://example.com/foo/extft1/bar/(featureId);collectionIdTypes=integer}"/>
	  <MapEntry type="ExtFT2" rule="*" targetType="https://example.org/extschema/schema.json#/$defs/ExtFT2" param="collectionInfos{uriTemplate=https://example.com/foo/(collectionId)/bar/(featureId);collectionIds=extft2,extft2sub1,extft2sub2;collectionIdTypes=string}"/>
	  <MapEntry type="ExtFT3" rule="*" targetType="https://example.org/extschema/schema.json#/$defs/ExtFT3" param="collectionInfos{uriTemplate=https://example.com/foo/(collectionId)/baz/(featureId);collectionIdTypes=string,integer}"/>
    </mapEntries>
  </Target>
  
  <!-- ========== -->
  <!-- Plain JSON 2 -->
  <!-- ========== -->
  <Target class="de.interactive_instruments.shapechange.core.target.json.JsonSchemaTarget" mode="enabled" inputs="IDENTITY">   
   <targetParameter name="outputDirectory" value="testResults/json/featureRefs/json_schemas/schema2"/>
   <targetParameter name="sortedOutput" value="true"/>
   <targetParameter name="inlineOrByReferenceDefault" value="byReference"/>
   <targetParameter name="featureRefProfiles" value="rel-as-uri"/>
   <targetParameter name="defaultEncodingRule" value="myPlainJson2"/>
   <rules>
    <EncodingRule name="myPlainJson2" extends="defaultPlainJson">
     <rule name="rule-json-all-featureRefs"/>
    </EncodingRule>
   </rules>
   <xi:include href="sc-resources/config/StandardMapEntries_JSON.xml"/>
    <mapEntries>
	  <MapEntry type="ExtFT1" rule="*" targetType="https://example.org/extschema/schema.json#/$defs/ExtFT1" param="collectionInfos{uriTemplate=https://example.com/foo/extft1/bar/(featureId);collectionIdTypes=integer}"/>
	  <MapEntry type="ExtFT2" rule="*" targetType="https://example.org/extschema/schema.json#/$defs/ExtFT2" param="collectionInfos{uriTemplate=https://example.com/foo/(collectionId)/bar/(featureId);collectionIds=extft2,extft2sub1,extft2sub2;collectionIdTypes=string}"/>
	  <MapEntry type="ExtFT3" rule="*" targetType="https://example.org/extschema/schema.json#/$defs/ExtFT3" param="collectionInfos{uriTemplate=https://example.com/foo/(collectionId)/baz/(featureId);collectionIdTypes=string,integer}"/>
    </mapEntries>
  </Target>
  
  <!-- ========== -->
  <!-- Plain JSON 3 -->
  <!-- ========== -->
  <Target class="de.interactive_instruments.shapechange.core.target.json.JsonSchemaTarget" mode="enabled" inputs="IDENTITY">   
   <targetParameter name="outputDirectory" value="testResults/json/featureRefs/json_schemas/schema3"/>
   <targetParameter name="sortedOutput" value="true"/>
   <targetParameter name="inlineOrByReferenceDefault" value="byReference"/>
   <targetParameter name="featureRefProfiles" value="rel-as-key"/>
   <targetParameter name="featureRefIdTypes" value="integer"/>
   <targetParameter name="lowerCaseCollectionIdsInRelAsKeyProfile" value="false"/>
   <targetParameter name="defaultEncodingRule" value="myPlainJson3"/>
   <rules>
    <EncodingRule name="myPlainJson3" extends="defaultPlainJson">
     <rule name="rule-json-all-featureRefs"/>
    </EncodingRule>
   </rules>
   <xi:include href="sc-resources/config/StandardMapEntries_JSON.xml"/>
    <mapEntries>
	  <MapEntry type="ExtFT1" rule="*" targetType="https://example.org/extschema/schema.json#/$defs/ExtFT1" param="collectionInfos{uriTemplate=https://example.com/foo/extft1/bar/(featureId);collectionIdTypes=integer}"/>
	  <MapEntry type="ExtFT2" rule="*" targetType="https://example.org/extschema/schema.json#/$defs/ExtFT2" param="collectionInfos{uriTemplate=https://example.com/foo/(collectionId)/bar/(featureId);collectionIds=extft2,extft2sub1,extft2sub2;collectionIdTypes=string}"/>
	  <MapEntry type="ExtFT3" rule="*" targetType="https://example.org/extschema/schema.json#/$defs/ExtFT3" param="collectionInfos{uriTemplate=https://example.com/foo/(collectionId)/baz/(featureId);collectionIdTypes=string,integer}"/>
    </mapEntries>
  </Target>
  
  <!-- ========== -->
  <!-- Plain JSON 4 -->
  <!-- ========== -->
  <Target class="de.interactive_instruments.shapechange.core.target.json.JsonSchemaTarget" mode="enabled" inputs="IDENTITY">   
   <targetParameter name="outputDirectory" value="testResults/json/featureRefs/json_schemas/schema4"/>
   <targetParameter name="sortedOutput" value="true"/>
   <targetParameter name="inlineOrByReferenceDefault" value="byReference"/>
   <targetParameter name="featureRefProfiles" value="rel-as-key, rel-as-uri, rel-as-link"/>
   <targetParameter name="featureRefIdTypes" value="integer"/>
   <targetParameter name="defaultEncodingRule" value="myPlainJson4"/>
   <rules>
    <EncodingRule name="myPlainJson4" extends="defaultPlainJson">
     <rule name="rule-json-all-featureRefs"/>
    </EncodingRule>
   </rules>
   <xi:include href="sc-resources/config/StandardMapEntries_JSON.xml"/>
    <mapEntries>
	  <MapEntry type="ExtFT1" rule="*" targetType="https://example.org/extschema/schema.json#/$defs/ExtFT1" param="collectionInfos{uriTemplate=https://example.com/foo/extft1/bar/(featureId);collectionIdTypes=integer}"/>
	  <MapEntry type="ExtFT2" rule="*" targetType="https://example.org/extschema/schema.json#/$defs/ExtFT2" param="collectionInfos{uriTemplate=https://example.com/foo/(collectionId)/bar/(featureId);collectionIds=extft2,extft2sub1,extft2sub2;collectionIdTypes=string}"/>
	  <MapEntry type="ExtFT3" rule="*" targetType="https://example.org/extschema/schema.json#/$defs/ExtFT3" param="collectionInfos{uriTemplate=https://example.com/foo/(collectionId)/baz/(featureId);collectionIdTypes=string,integer}"/>
    </mapEntries>
  </Target>
  
  <!-- ========== -->
  <!-- Plain JSON 5 -->
  <!-- ========== -->
  <Target class="de.interactive_instruments.shapechange.core.target.json.JsonSchemaTarget" mode="enabled" inputs="IDENTITY">   
   <targetParameter name="outputDirectory" value="testResults/json/featureRefs/json_schemas/schema5"/>
   <targetParameter name="sortedOutput" value="true"/>
   <targetParameter name="inlineOrByReferenceDefault" value="byReference"/>
   <targetParameter name="featureRefProfiles" value="rel-as-key, rel-as-uri, rel-as-link"/>
   <targetParameter name="featureRefIdTypes" value="string"/>
   <targetParameter name="featureRefIdFormat" value="uuid"/>
   <targetParameter name="featureRefWithAnyCollectionId" value="true"/>
   <targetParameter name="defaultEncodingRule" value="myPlainJson5"/>
   <rules>
    <EncodingRule name="myPlainJson5" extends="defaultPlainJson">
     <rule name="rule-json-all-featureRefs"/>
    </EncodingRule>
   </rules>
   <xi:include href="sc-resources/config/StandardMapEntries_JSON.xml"/>
    <mapEntries>
	  <MapEntry type="ExtFT1" rule="*" targetType="https://example.org/extschema/schema.json#/$defs/ExtFT1" param="collectionInfos{uriTemplate=https://example.com/foo/extft1/bar/(featureId);collectionIdTypes=integer}"/>
	  <MapEntry type="ExtFT2" rule="*" targetType="https://example.org/extschema/schema.json#/$defs/ExtFT2" param="collectionInfos{uriTemplate=https://example.com/foo/(collectionId)/bar/(featureId);collectionIds=extft2,extft2sub1,extft2sub2;collectionIdTypes=string;collectionIdFormat=uuid}"/>
	  <MapEntry type="ExtFT3" rule="*" targetType="https://example.org/extschema/schema.json#/$defs/ExtFT3" param="collectionInfos{uriTemplate=https://example.com/foo/(collectionId)/baz/(featureId);collectionIdTypes=string,integer}"/>
    </mapEntries>
  </Target>
  
  <!-- ========== -->
  <!-- Plain JSON 6 -->
  <!-- ========== -->
  <Target class="de.interactive_instruments.shapechange.core.target.json.JsonSchemaTarget" mode="enabled" inputs="IDENTITY">   
   <targetParameter name="outputDirectory" value="testResults/json/featureRefs/json_schemas/schema6"/>
   <targetParameter name="sortedOutput" value="true"/>
   <targetParameter name="inlineOrByReferenceDefault" value="byReference"/>
   <targetParameter name="featureRefProfiles" value="rel-as-key, rel-as-uri, rel-as-link"/>
   <targetParameter name="featureRefIdTypes" value="string"/>
   <targetParameter name="featureRefIdFormat" value="uuid"/>
   <targetParameter name="featureRefWithAnyCollectionId" value="false"/>
   <targetParameter name="defaultEncodingRule" value="myPlainJson6"/>
   <rules>
    <EncodingRule name="myPlainJson6" extends="defaultPlainJson">
     <rule name="rule-json-all-featureRefs"/>
     <rule name="rule-json-all-featureRefs-alwaysSimple"/>
    </EncodingRule>
   </rules>
   <xi:include href="sc-resources/config/StandardMapEntries_JSON.xml"/>
    <mapEntries>
	  <MapEntry type="ExtFT1" rule="*" targetType="https://example.org/extschema/schema.json#/$defs/ExtFT1" param="collectionInfos{uriTemplate=https://example.com/foo/extft1/bar/(featureId);collectionIdTypes=integer}"/>
	  <MapEntry type="ExtFT2" rule="*" targetType="https://example.org/extschema/schema.json#/$defs/ExtFT2" param="collectionInfos{uriTemplate=https://example.com/foo/(collectionId)/bar/(featureId);collectionIds=extft2,extft2sub1,extft2sub2;collectionIdTypes=string;collectionIdFormat=uuid}"/>
	  <MapEntry type="ExtFT3" rule="*" targetType="https://example.org/extschema/schema.json#/$defs/ExtFT3" param="collectionInfos{uriTemplate=https://example.com/foo/(collectionId)/baz/(featureId);collectionIdTypes=string,integer}"/>
    </mapEntries>
  </Target>
 </targets>
</ShapeChangeConfiguration>
