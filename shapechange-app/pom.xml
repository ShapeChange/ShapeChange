<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>net.shapechange</groupId>
    <artifactId>ShapeChange</artifactId>
    <version>4.0.0-SNAPSHOT</version>
  </parent>
  <artifactId>shapechange-app</artifactId>
    	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>shapechange-core</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>shapechange-ea</artifactId>
			<version>${project.version}</version>
		</dependency>
			<dependency>
				<groupId>org.apache.xmlgraphics</groupId>
				<artifactId>fop</artifactId>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-api</artifactId>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-engine</artifactId>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.xmlunit</groupId>
				<artifactId>xmlunit-core</artifactId>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.xmlunit</groupId>
				<artifactId>xmlunit-legacy</artifactId>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.flipkart.zjsonpatch</groupId>
				<artifactId>zjsonpatch</artifactId>
				<scope>test</scope>
			</dependency>		
	</dependencies>	
		<build>
		<finalName>ShapeChange-${project.version}</finalName>
		<resources>			
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
	            <directory>../shapechange-core/src/main/resources</directory>
	            <filtering>true</filtering>
	            <targetPath>${project.basedir}/sc-resources</targetPath>
	            <includes>
	                <include>**/*</include>
	            </includes>
	            <excludes>
		          <exclude>*.properties</exclude>
		        </excludes>
	        </resource>
	        <resource>
	            <directory>../shapechange-ea/src/main/resources</directory>
	            <filtering>true</filtering>
	            <targetPath>${project.basedir}/sc-resources</targetPath>
	            <includes>
	                <include>**/*</include>
	            </includes>
	            <excludes>
		          <exclude>*.properties</exclude>
		        </excludes>
	        </resource>
		</resources>
			<plugins>
			    <plugin>
				    <groupId>org.openrewrite.maven</groupId>
				    <artifactId>rewrite-maven-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>pl.project13.maven</groupId>
					<artifactId>git-commit-id-plugin</artifactId>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<systemPropertyVariables>
							<scunittesting>true</scunittesting>
						</systemPropertyVariables>
<!--						 The following can be used to exclude Saxon when-->
<!--						performing unit  tests. -->
						 <classpathDependencyExcludes>
							<classpathDependencyExclude>net.sf.saxon:Saxon-HE</classpathDependencyExclude> 
						 </classpathDependencyExcludes> 
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<configuration>
						<filesets>
							<fileset>
								<directory>testResults</directory>
								<followSymlinks>false</followSymlinks>
							</fileset>
						</filesets>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
				</plugin>	
				<plugin>
					<groupId>org.asciidoctor</groupId>
					<artifactId>asciidoctor-maven-plugin</artifactId>
					<configuration>
						<sourceDirectory>src/docs/asciidoc</sourceDirectory>
						<outputDirectory>${project.build.directory}/gh-pages/${project.version}</outputDirectory>
						<preserveDirectories>true</preserveDirectories>
						<backend>html5</backend>
						<doctype>book</doctype>
						<attributes>
							<project-version>${project.version}</project-version>
							<source-highlighter>coderay</source-highlighter>
							<imagesdir>./</imagesdir>
						</attributes>
					</configuration>
					<executions>
						<execution>
							<id>output-html</id>
							<phase>package</phase>
							<goals>
								<goal>process-asciidoc</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<executions>
						<execution>
							<id>default-jar</id>
							<phase>package</phase>
							<goals>
								<goal>jar</goal>
								<goal>test-jar</goal>
							</goals>
							<configuration>
								<archive>
									<manifest>
										<mainClass>de.interactive_instruments.shapechange.app.Main</mainClass>
										<addClasspath>true</addClasspath>
										<classpathPrefix>lib</classpathPrefix>
<!--										 Workaround for Maven bug #MJAR-156-->
<!--										(https://issues.apache.org/jira/browse/MJAR-156) -->
										<useUniqueVersions>false</useUniqueVersions>
									</manifest>
									<manifestEntries>
										<Project-Version>${project.version}</Project-Version>
										<Git-Revision>${git.commit.id}</Git-Revision>
										<Build-Timestamp>${build.timestamp}</Build-Timestamp>
										<Build-Branch>${git.branch}</Build-Branch>
									</manifestEntries>
								</archive>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<executions>
						<execution>
							<?m2e ignore?>
							<id>copy-dependencies</id>
							<phase>package</phase>
							<goals>
								<goal>copy-dependencies</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.build.directory}/lib</outputDirectory>
								<overWriteReleases>true</overWriteReleases>
								<overWriteSnapshots>true</overWriteSnapshots>
								<excludeArtifactIds>Saxon-HE</excludeArtifactIds>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<configuration>
						<nonFilteredFileExtensions>
							<nonFilteredFileExtension>qea</nonFilteredFileExtension>
							<nonFilteredFileExtension>docx</nonFilteredFileExtension>
						</nonFilteredFileExtensions>
					</configuration>
					<executions>
						<execution>
							<?m2e ignore?>
							<id>copy-resources-app-tests</id>
							<phase>package</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<includeEmptyDirs>true</includeEmptyDirs>
								<outputDirectory>${project.build.directory}/appassembler/test</outputDirectory>
								<resources>
									<resource>
										<directory>src/distributiontests</directory>
										<includes>
											<include>**/*</include>
										</includes>
										<excludes>
								        	<exclude>**/*.bat</exclude>
								        	<exclude>**/*.sh</exclude>
								        </excludes>
									</resource>
								</resources>
							</configuration>
						</execution>
						<execution>
							<?m2e ignore?>
							<id>copy-resources-app-tests-shell</id>
							<phase>package</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.build.directory}/appassembler/shell</outputDirectory>
								<resources>
									<resource>
										<directory>src/distributiontests</directory>
										<filtering>true</filtering>
										<includes>
								        	<include>**/*.bat</include>
								        	<include>**/*.sh</include>
								        </includes>
									</resource>
								</resources>
							</configuration>
						</execution>
						<execution>
							<?m2e ignore?>
							<id>copy-resources-app-license</id>
							<phase>package</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.build.directory}/appassembler/lic</outputDirectory>
								<resources>
									<resource>
										<directory>../</directory>
										<includes>
											<include>LICENSE</include>
										</includes>
									</resource>
								</resources>
							</configuration>
						</execution>
						<execution>
							<?m2e ignore?>
							<id>copy-resources-app-resources</id>
							<phase>package</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.build.directory}/appassembler/resources</outputDirectory>
								<resources>
									<resource>
										<directory>sc-resources</directory>
										<includes>
											<include>config/**</include>
											<include>dataModelPatterns/**</include>
											<include>ont/**</include>
											<include>schema/**</include>
											<include>templates/**</include>
											<include>xslt/**</include>
										</includes>
									</resource>
								</resources>
							</configuration>
						</execution>
						<execution>
							<?m2e ignore?>
							<id>copy-resources-app-documentation</id>
							<phase>package</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.build.directory}/appassembler/documentation</outputDirectory>
								<resources>
									<resource>
										<directory>${project.build.directory}/gh-pages/${project.version}</directory>
									</resource>
								</resources>
							</configuration>
						</execution>
						<execution>
							<?m2e ignore?>
							<id>copy-resources-ghpages-index</id>
							<phase>package</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>	
								<outputDirectory>${project.build.directory}/gh-pages</outputDirectory>
								<resources>
									<resource>
										<directory>src/docs</directory>
										<filtering>true</filtering>
										<includes>
											<include>index.html</include>
										</includes>
									</resource>
								</resources>
							</configuration>
						</execution>
						<execution>
							<?m2e ignore?>
							<id>copy-resources-ghpages-javadoc</id>
							<phase>package</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>	
								<outputDirectory>${project.build.directory}/gh-pages/javadoc</outputDirectory>
								<resources>
									<resource>
										<directory>${project.basedir}/../target/gh-pages/javadoc</directory>
										<includes>
											<include>**/*</include>
										</includes>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<executions>
						<execution>
							<id>create-zip</id>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
							<configuration>
								<descriptors>
									<descriptor>assembly.xml</descriptor>
								</descriptors>
								<appendAssemblyId>false</appendAssemblyId>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
				</plugin>
				<plugin>
					<artifactId>maven-scm-publish-plugin</artifactId>
					<configuration>
						<serverId>github.com</serverId>
						<pubScmUrl>scm:git:https://github.com/ShapeChange/ShapeChange.git</pubScmUrl>
						<scmBranch>gh-pages</scmBranch>
						<checkinComment>Update documentation</checkinComment>
						<content>${project.build.directory}/gh-pages</content>
						<skipDeletedFiles>true</skipDeletedFiles>
						<siteOutputEncoding>UTF-8</siteOutputEncoding>
						<tryUpdate>true</tryUpdate>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>publish-scm</goal>
							</goals>
						</execution>
					</executions>
				</plugin>						
			</plugins>
			<extensions>
				<extension>
					<groupId>org.apache.maven.wagon</groupId>
					<artifactId>wagon-ftp</artifactId>
					<version>3.5.3</version>
				</extension>
				<extension>
					<groupId>org.apache.maven.wagon</groupId>
					<artifactId>wagon-ssh-external</artifactId>
					<version>3.5.3</version>
				</extension>
			</extensions>
		</build>
</project>